services:
  backend:
    build: ./backend
    environment:
      - APP_ENV
      - DB_HOST
      - DB_USER
      - DB_PASSWORD
      - DB_NAME
      - JWT_SECRET
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14.5-alpine
    restart: always
    user: ${DB_USER}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  proxy:
    image: nginx:1.23.1-alpine
    volumes:
      - type: bind
        source: ./web/dist
        target: /usr/share/nginx/html
        read_only: true
      - type: bind
        source: ./proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 80:80
    depends_on: 
      - backend

volumes:
  postgres-data:
